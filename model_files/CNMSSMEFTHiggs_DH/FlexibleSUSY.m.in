
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = NMSSM;
FlexibleEFTHiggs = True;


FSBVPSolvers = { SemiAnalyticSolver };

(* CNMSSM input parameters *)

MINPAR = {
   {2, m12},
   {3, TanBeta},
   {4, Sign[vS]},
   {5, Azero}
};

EXTPAR = {
   {61, LambdaInput}
};

FSAuxiliaryParameterInfo = {
   {m0Sq,        { ParameterDimensions -> {1},
                   MassDimension -> 2 } },
   {LambdaInput, { ParameterDimensions -> {1},
                   MassDimension -> 0 } }
};

EWSBOutputParameters = { \[Kappa], vS, m0Sq };

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[14 m12^2 - 3 m12 Azero + Azero^2];

SUSYScaleInput = {};




HighScale = g1 == g2;

HighScaleFirstGuess = 2.0 10^16;

HighScaleInput={
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {mq2, UNITMATRIX[3] m0Sq},
   {ml2, UNITMATRIX[3] m0Sq},
   {md2, UNITMATRIX[3] m0Sq},
   {mu2, UNITMATRIX[3] m0Sq},
   {me2, UNITMATRIX[3] m0Sq},
   {mHu2, m0Sq},
   {mHd2, m0Sq},
   {ms2, m0Sq},
   {\[Lambda], LambdaInput},
   {T[\[Kappa]], Azero \[Kappa]},
   {T[\[Lambda]], Azero LambdaInput},
   {MassB, m12},
   {MassWB,m12},
   {MassG,m12}
};

InitialGuessAtHighScale = {
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {mq2, UNITMATRIX[3] m12^2},
   {ml2, UNITMATRIX[3] m12^2},
   {md2, UNITMATRIX[3] m12^2},
   {mu2, UNITMATRIX[3] m12^2},
   {me2, UNITMATRIX[3] m12^2},
   {mHu2, m12^2},
   {mHd2, m12^2},
   {ms2, m12^2},
   {\[Lambda], LambdaInput},
   {T[\[Kappa]], Azero \[Kappa]},
   {T[\[Lambda]], Azero LambdaInput},
   {MassB, m12},
   {MassWB,m12},
   {MassG, m12}
};

InitialGuessAtSUSYScale = {
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vS, Sign[vS] Abs[m12]},
   {\[Kappa], LambdaInput}
};

(* VEV is the SM-like VEV in the MSSM *)
MatchingScaleInput = {
    {vu, VEV Sin[ArcTan[vu/vd]]},
    {vd, VEV Cos[ArcTan[vu/vd]]}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

UseHiggs2LoopNMSSM = True;
EffectiveMu = \[Lambda] vS / Sqrt[2];
EffectiveMASqr = (T[\[Lambda]] vS / Sqrt[2] + 0.5 \[Lambda] \[Kappa] vS^2) (vu^2 + vd^2) / (vu vd);

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = HighPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput,
           {{0, Hold[HighScale]},
            {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } },
   {EWSBOutputs, NoScale,
           {{1, \[Kappa]},
            {2, vS},
            {3, m0Sq} } },
   {FlexibleSUSYLowEnergy,
           {{21, FlexibleSUSYObservable`aMuon} } },
   {EFFHIGGSCOUPLINGS, NoScale,
           {{1, FlexibleSUSYObservable`CpHiggsPhotonPhoton},
            {2, FlexibleSUSYObservable`CpHiggsGluonGluon},
            {3, FlexibleSUSYObservable`CpPseudoScalarPhotonPhoton},
            {4, FlexibleSUSYObservable`CpPseudoScalarGluonGluon} } },
   {ALPHA, {{ArcSin[Pole[ZH[2,2]]]}}},
   {HMIX , {{2, vu / vd},
            {3, Sqrt[vu^2 + vd^2]},
            {4, M[Ah[2]]^2},
            {102, vd},
            {103, vu} } },
   {Au,    {{1, 1, T[Yu][1,1] / Yu[1,1]},
            {2, 2, T[Yu][2,2] / Yu[2,2]},
            {3, 3, T[Yu][3,3] / Yu[3,3]} } },
   {Ad,    {{1, 1, T[Yd][1,1] / Yd[1,1]},
            {2, 2, T[Yd][2,2] / Yd[2,2]},
            {3, 3, T[Yd][3,3] / Yd[3,3]} } },
   {Ae,    {{1, 1, T[Ye][1,1] / Ye[1,1]},
            {2, 2, T[Ye][2,2] / Ye[2,2]},
            {3, 3, T[Ye][3,3] / Ye[3,3]} } },
   {MSOFT, {{1, MassB},
            {2, MassWB},
            {3, MassG},
            {21, mHd2},
            {22, mHu2},
            {31, SignedAbsSqrt[ml2[1,1]]},
            {32, SignedAbsSqrt[ml2[2,2]]},
            {33, SignedAbsSqrt[ml2[3,3]]},
            {34, SignedAbsSqrt[me2[1,1]]},
            {35, SignedAbsSqrt[me2[2,2]]},
            {36, SignedAbsSqrt[me2[3,3]]},
            {41, SignedAbsSqrt[mq2[1,1]]},
            {42, SignedAbsSqrt[mq2[2,2]]},
            {43, SignedAbsSqrt[mq2[3,3]]},
            {44, SignedAbsSqrt[mu2[1,1]]},
            {45, SignedAbsSqrt[mu2[2,2]]},
            {46, SignedAbsSqrt[mu2[3,3]]},
            {47, SignedAbsSqrt[md2[1,1]]},
            {48, SignedAbsSqrt[md2[2,2]]},
            {49, SignedAbsSqrt[md2[3,3]]} } },
   {NMSSMRUN,
           {{1, \[Lambda]},
            {2, \[Kappa]},
            {3, T[\[Lambda]] / \[Lambda]},
            {4, T[\[Kappa]] / \[Kappa]},
            {5, \[Lambda] vS / Sqrt[2]},
            {10, ms2} } }
};
